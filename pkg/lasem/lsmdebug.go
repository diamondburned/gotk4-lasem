// Code generated by girgen. DO NOT EDIT.

package lasem

import (
	"fmt"
	"runtime"
	"unsafe"
)

// #include <stdlib.h>
// #include <lsm.h>
// #include <lsmdom.h>
// #include <lsmdomdocument.h>
// #include <lsmdomdocumentfragment.h>
// #include <lsmdomnamednodemap.h>
import "C"

type DebugLevel C.gint

const (
	DebugLevelNone DebugLevel = iota
	DebugLevelWarning
	DebugLevelDebug
	DebugLevelLog
	DebugLevelCount
)

// String returns the name in string for DebugLevel.
func (d DebugLevel) String() string {
	switch d {
	case DebugLevelNone:
		return "None"
	case DebugLevelWarning:
		return "Warning"
	case DebugLevelDebug:
		return "Debug"
	case DebugLevelLog:
		return "Log"
	case DebugLevelCount:
		return "Count"
	default:
		return fmt.Sprintf("DebugLevel(%d)", d)
	}
}

// The function takes the following parameters:
//
func DebugEnable(categorySelection string) {
	var _arg1 *C.char // out

	_arg1 = (*C.char)(unsafe.Pointer(C.CString(categorySelection)))
	defer C.free(unsafe.Pointer(_arg1))

	C.lsm_debug_enable(_arg1)
	runtime.KeepAlive(categorySelection)
}
