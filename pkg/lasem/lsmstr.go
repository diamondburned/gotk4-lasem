// Code generated by girgen. DO NOT EDIT.

package lasem

import (
	"runtime"
	"unsafe"

	"github.com/diamondburned/gotk4/pkg/core/gextras"
)

// #include <stdlib.h>
// #include <lsm.h>
// #include <lsmdom.h>
// #include <lsmdomdocument.h>
// #include <lsmdomdocumentfragment.h>
// #include <lsmdomnamednodemap.h>
import "C"

// The function takes the following parameters:
//
// The function returns the following values:
//
func StrIsURI(str string) bool {
	var _arg1 *C.char    // out
	var _cret C.gboolean // in

	_arg1 = (*C.char)(unsafe.Pointer(C.CString(str)))
	defer C.free(unsafe.Pointer(_arg1))

	_cret = C.lsm_str_is_uri(_arg1)
	runtime.KeepAlive(str)

	var _ok bool // out

	if _cret != 0 {
		_ok = true
	}

	return _ok
}

// The function takes the following parameters:
//
//    - pointList
//    - extents
//
func StrPointListExents(pointList string, extents *Extents) {
	var _arg1 *C.char       // out
	var _arg2 *C.LsmExtents // out

	_arg1 = (*C.char)(unsafe.Pointer(C.CString(pointList)))
	defer C.free(unsafe.Pointer(_arg1))
	_arg2 = (*C.LsmExtents)(gextras.StructNative(unsafe.Pointer(extents)))

	C.lsm_str_point_list_exents(_arg1, _arg2)
	runtime.KeepAlive(pointList)
	runtime.KeepAlive(extents)
}

// The function takes the following parameters:
//
// The function returns the following values:
//
func StrToURI(str string) string {
	var _arg1 *C.char // out
	var _cret *C.char // in

	_arg1 = (*C.char)(unsafe.Pointer(C.CString(str)))
	defer C.free(unsafe.Pointer(_arg1))

	_cret = C.lsm_str_to_uri(_arg1)
	runtime.KeepAlive(str)

	var _utf8 string // out

	_utf8 = C.GoString((*C.gchar)(unsafe.Pointer(_cret)))
	defer C.free(unsafe.Pointer(_cret))

	return _utf8
}
